plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
}

group 'fr.uphf'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
}

ext {
    kotlin_version = '1.3.21'
    klaxon_version = '5.0.1'
    assertj_version = '3.11.1'
    spek_version = '2.0.1'
}


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlin_version"
    compile("com.beust:klaxon:${klaxon_version}")

    compile("org.assertj:assertj-core:${assertj_version}")

    testImplementation ("org.spekframework.spek2:spek-dsl-jvm:${spek_version}")  {
        exclude group: 'org.jetbrains.kotlin'
    }


    // spek requires kotlin-reflect, can be omitted if already in the classpath
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'

    testRuntimeOnly ("org.spekframework.spek2:spek-runner-junit5:${spek_version}") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
}

// setup the test task
test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Implementation-Version': version
    }
    baseName = project.name + '-all'
    from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}



